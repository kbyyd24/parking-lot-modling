@startuml

class ParkingManager <<Entity>> {
  - parkingBoys: Collection<ParkingBoy>
  + dispatchOneParkingBoy(): ParkingBoy
}

class ParkingBoy <<Entity>> {
  - parkingLots: List<ParkingLot>
  - parkingStrategy: ParkingStrategy
  + findOneParkingLot(): ParkingLot
}

class ParkingLot <<Entity>> {
  - id: String
  - capacity: int
  - currentParkingCars: Map<Receipt, Car>
  + park(Car): Receipt
  + pickUp(Receipt): Car
  + isAvailable(): Boolean
  + availableSpaceCount(): int
}

class Receipt <<Value Object>> {
  - parkingLotId: String
  - token: String
}

class Car <<Value Object>>

interface ParkingStrategy {
  + apply(List<ParkingLot>): ParkingLot
}

class FirstAvailableStrategy

class MostAvailableSpaceStrategy

ParkingBoy "N" o--> "N" ParkingLot

ParkingBoy "1" -> "1" ParkingStrategy

ParkingLot "1" o--> "N" Receipt

ParkingLot "1" o--> "N" Car

ParkingStrategy <|.. FirstAvailableStrategy

ParkingStrategy <|.. MostAvailableSpaceStrategy

ParkingManager "1" --> "N" ParkingBoy

class ParkingBoyApplicationService <<Application Service>> {
+ park(String parkingBoyId, Car car): Receipt
}

class ParkingBoyParkService <<Domain Service>> {
+ park(ParkingBoy, Car): Receipt
}

interface ParkingBoyRepository <<Repository>> {
+ findById(String): ParkingBoy
+ save(ParkingBoy)
}

ParkingBoyApplicationService --> ParkingBoyParkService
ParkingBoyApplicationService --> ParkingBoyRepository
ParkingBoyApplicationService --> ParkingBoy

class ParkingManagerApplicationService <<Application Service>> {
+ park(Car): Receipt
+ hasAvailableParkingLot(): boolean
}

class ParkingManagerParkService <<Domain Service>> {
+ park(ParkingManager, Car): Receipt
}

interface ParkingManagerRepository <<Repository>> {
+ find(): ParkingManager
+ save(ParkingManager)
}

ParkingManagerApplicationService --> ParkingManagerParkService
ParkingManagerApplicationService --> ParkingManagerRepository
ParkingManagerApplicationService --> ParkingManager




@enduml

ParkingBoyParkService ..> ParkingBoy
ParkingBoyParkService ..> Car
ParkingBoyParkService ..> Receipt
ParkingBoyApplicationService ..> ParkingBoy
ParkingBoyApplicationService ..> Car
ParkingBoyApplicationService ..> Receipt
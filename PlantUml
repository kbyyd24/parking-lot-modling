@startuml

class ParkingManager <<Entity>> {
  - parkingBoys: Collection<ParkingBoy>
  + dispatchOneParkingBoy(): ParkingBoy
}

class ParkingBoy <<Entity>> {
  - parkingLots: List<ParkingLot>
  - parkingStrategy: ParkingStrategy
  + findOneParkingLot(): ParkingLot
}

class ParkingLot <<Entity>> {
  - id: String
  - capacity: int
  - carRecords: Map<Receipt, Car>
  + park(Car): Receipt
  + pickUp(Receipt): Car
  + isAvailable(): Boolean
  + availableSpaceCount(): int
}

class Receipt <<Value Object>> {
  - parkingLotId: String
  - token: String
}

class Car <<Value Object>>

interface ParkingStrategy {
  + apply(List<ParkingLot>): ParkingLot
}

class FirstAvailableStrategy

class MostAvailableSpaceStrategy

ParkingBoy "N" o--> "N" ParkingLot

ParkingBoy "1" -> "1" ParkingStrategy

ParkingLot "1" o--> "N" Receipt

ParkingLot "1" o--> "N" Car

ParkingStrategy <|.. FirstAvailableStrategy

ParkingStrategy <|.. MostAvailableSpaceStrategy

ParkingManager "1" --> "N" ParkingBoy

@enduml